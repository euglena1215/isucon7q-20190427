include mime.types;
# include /etc/nginx/mime.types;
include koi-win;

# another virtual host using mix of IP-, name-, and port-based configuration
include servers/*;

# Load modular configuration files from the /etc/nginx/conf.d directory.
# See http://nginx.org/en/docs/ngx_core_module.html#include
# for more information.
# include /etc/nginx/conf.d/*.conf;

default_type application/octet-stream;

sendfile on;

# tcp_nopush on;

# client_max_body_size Postの最大サイズとかでコケることがあるので，コケたらこれを大きくする．
client_max_body_size 100M;

client_header_timeout 10;
client_body_timeout 10;

# gzip関連
gzip on;
gzip_vary on;
gzip_types
	text/plain
	text/css
	text/js
	text/xml
	text/javascript
	application/javascript
	application/x-javascript
	application/json
	application/xml
	application/xml+rss;
gzip_proxied any;
gzip_min_length 1024;
gzip_comp_level 6;

# open_file_cache はISUCON界隈では100がdefaultな感じ． inactive=10s or 20s
open_file_cache max=100 inactive=20s;

open_file_cache_valid 30s;
open_file_cache_min_uses 2;
open_file_cache_errors on;

server_tokens off;

log_format with_time '$remote_addr - $remote_user [$time_local] '
					'"$request" $status $body_bytes_sent '
					'"$http_referer" "$http_user_agent" $request_time';

# access_log on;
access_log /var/log/nginx/access.log with_time;
# access_log  logs/access.log  main;

tcp_nopush on;
tcp_nodelay on;

#timeout系
# types_hash_max_size typeのhashテーブルのサイズをきめる．デフォルトは1024
types_hash_max_size 2048;

keepalive_timeout 65;
keepalive_requests 10000;

# 再利用のため無効のまま
# reset_timedout_connection on;
# send_timeout 10;

# ssl_session_cache 1mで4000sessionをcacheする
# ssl_session_time 3mくらいでよくね？

# ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
# ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
# ssl_session_cache    shared:SSL:10m;
# ssl_session_timeout  10m;
# ssl_dhparam /etc/ssl/certs/dhparam.pem;


upstream app {
	server 52.198.166.230:5000;
	server 54.238.200.140:5000;
}

upstream icon_app {
	server 127.0.0.1:5000;
}

server {
	listen 80 default_server;
	listen [::]:80 default_server;
	server_name isubata.example.com;

	client_max_body_size 20M;

	root /home/isucon/isubata/webapp/public;

	location /favicon.ico { }
	location /fonts/ {
		expires   max;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		etag off;
		gunzip on;
		gzip_static always;
	}
	location /js/ { 
		expires   max;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		etag off;
		gunzip on;
		gzip_static always;
	}
	location /css/ { 
		expires   max;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		etag off;
		gunzip on;
		gzip_static always;
	}

	location /profile {
		if ($request_method ~ ^(POST)$ ) {
			proxy_pass http://icon_app;
		}

		try_files $uri @app;
	}

	location / {
  	try_files $uri @app;
  }

	location /icons/ {
		try_files $uri @icon_app;
		expires   max;
		add_header Pragma public;
		add_header Cache-Control "public, must-revalidate, proxy-revalidate";
		etag off;
	}

	location @app {
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass http://app;
  }

	location @icon_app {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass http://icon_app;
	}
}
